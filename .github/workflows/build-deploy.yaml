name: build-deploy
on:
  workflow_dispatch:
    inputs:
      env_name:
        description: "Environment name (staging or production)"
        required: true
        default: "staging"
      run_test_after:
        description: "Run test after? (true or false)"
        required: false
        default: "false"
      test_kind:
        description: "Kind of test (integration or load)"
        required: false
        default: "integration"

defaults:
  run:
    working-directory: src/deployments

jobs:
  build-n-deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.env_name }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Environment details
        run: |
          echo "Environment: ${{ github.event.inputs.env_name }}"

      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2

      - name: Install model dependencies
        run: |
          pip install -r requirements.txt

      - name: Install bentoctl AWS Sagemaker operator
        run: |
          bentoctl operator install aws-sagemaker

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build model using BentoML v1.0+
        run: |
          sed -i -e "s/NAMESPACE_VAL/${{ github.event.inputs.env_name }}/g" bentofile.yaml
          cat bentofile.yaml
          bentoml build -f bentofile.yaml .

      - name: Containerize model and push to AWS ECR
        run: |
          bentoctl build -b rsmn-sales-xgbr:latest -f deployment_config.yaml
          cat bentoctl.tfvars

      - name: Deploy to AWS Sagemaker
        run: |
          terraform init
          terraform apply -var-file=bentoctl.tfvars -auto-approve

      - name: Apply formatting suggestions
        continue-on-error: true
        run: |
          pip install pre-commit
          pre-commit install
          pre-commit run --all-files

      - name: Commit and push terraform state
        run: |
          if [ -z $(git status -s) ]; then
            echo "Tree is clean nothing to commit!"
          else
            git fetch origin
            git config --local user.email "renz-bot-no-reply@gmail.com"
            git config --local user.name "Renz Robot"
            git branch --show-current
            git pull origin $(git branch --show-current)
            git restore bentofile.yaml
            git add --all
            git commit -m "Save deploy state of rsmn-sales-xgbr"
            git push origin $(git branch --show-current)
          fi

  test:
    if: ${{ github.event.inputs.run_test_after == 'true' }}
    needs: [build-n-deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Invoke test workflow
        run: |
          echo "DO TESTING HERE!"
